# OneDrive OneDrive Offline Backup (Python)

OneDrive OneDrive Offline Backup is a tool to backup all files in your personal OneDrive to a folder, which can be on an external drive for example

It is based on the work of Steve Murch https://github.com/stevemurch/onedrive-download, with additional functionalities:
- A GUI, made nice thanks to Tom Schimansky customtkinter https://github.com/TomSchimansky/CustomTkinter
- Heavy threading for enhanced performance
- File information (creation/last modification) kept
- Thanks to file information, only backup file if it as changed since last run
- Handle access token expiration
- Handle changed Download Url on the fly
- And more...

<img src="imgs/Screenshot.png" width="350" title="Screenshot" alt="Screenshot">

## Basic components

| Filename                  | Role                                                                                                                                               |
| ------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------- |
| start.py                  | The loader application; the GUI. This is the only code you run directly. It in turn calls the others.                                              |
| onedrive_authorization.py | Various ways to get the access_token and refresh_token for the Microsoft opengraph                                                                 |
| generate_list.py          | Code to generate the list of files and folders, to walk the OneDrive folder tree basically. Also handle refreshing the download path               |
| download_list.py          | Once the file_list.json file is generated, this walks through that file and downloads the items, preserving the file structure as seen on OneDrive |
| config.py                 | Global variables                                                                                                                                   |
| utils.py                  | Various utility function: Logging, Lock with Timeout, ...                                                                                          |
# Getting Started

Basically:

1. Clone this repo.
2. Create your own "App Registration" in Azure Portal https://portal.azure.com/. Save the application id value
3. Add Authentication:
	Mobile and desktop applications,
	redirect URL https://login.microsoftonline.com/common/oauth2/nativeclient,
	from any account type : Accounts in any organizational directory (Any Microsoft Entra ID tenant - Multitenant) and personal Microsoft accounts (e.g. Skype, Xbox)
4. Add a Client Secret and save the client value
5. Set Environment variables:
   - export MS_OPENGRAPH_APP_ID=your-app-id
   - export MS_OPENGRAPH_CLIENT_SECRET=your-client-secret
5. Run `python start.py` to start application
4. Use button "Get tokens" for one off setup, saving the code you see in your browser. It looks like "M.R3_BAY.ec1e0d91-e035-0065-f757-494a9c206744"
5. Exit application, export additional environment variable and restart the application
   - export MS_OPENGRAPH_CODE=your-app-code
6. Use button "Get tokens" again to generate token.

Then you can use the application
1. Run `python start.py` to start application
2. Use button "Generate files". You can set a OneDrive root folder to backup only a part of your OneDrive, like /Pictures
3. Use button "Download files". You can set the download path before

## Prerequisites

Written in Python 3.11. Some of the included libraries require 3.1 or above; this will not work in Python 2.x.

Need below modules
- customtkinter https://github.com/TomSchimansky/CustomTkinter
- requests
- contextlib
- PIL
- json
- ... And maybe more
